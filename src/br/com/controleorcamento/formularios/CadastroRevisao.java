/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.controleorcamento.formularios;

import br.com.controleorcamento.atividades.ConexaoMySQL;
import br.com.controleorcamento.atividades.RevisaoAtualizar;
import br.com.controleorcamento.atividades.RevisaoExcluir;
import br.com.controleorcamento.atividades.RevisaoSalvar;
import br.com.controleorcamento.objeto.Revisao;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rosaan
 */
public class CadastroRevisao extends javax.swing.JFrame {

    /**
     * Creates new form CadastroUsuario
     */
    public CadastroRevisao() {
        initComponents();
        carregarPlaca();
        carregarLocadora();
        filtrar();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaManutencao = new javax.swing.JTable();
        bSalvar = new javax.swing.JButton();
        bAtualizar = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();
        bFiltrar = new javax.swing.JButton();
        lID = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        bLimpar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        tBoxBase = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        fTextData = new javax.swing.JFormattedTextField();
        cBoxPlaca = new javax.swing.JComboBox<>();
        cBoxLocadora = new javax.swing.JComboBox<>();
        fTextKm = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tAreaObservacoes = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lRevisao = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lKMAtual = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Inspeção-16.png"))); // NOI18N
        jLabel1.setText("Cadastro de Revisão");

        jLabel2.setText("Placa");

        tabelaManutencao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Placa", "Locadora", "Base", "KM", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaManutencao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaManutencaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaManutencao);

        bSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Salvar-16.png"))); // NOI18N
        bSalvar.setText("Inserir");
        bSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarActionPerformed(evt);
            }
        });

        bAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Atualizações disponíveis-16.png"))); // NOI18N
        bAtualizar.setText("Atualizar");
        bAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtualizarActionPerformed(evt);
            }
        });

        bExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Excluir-16.png"))); // NOI18N
        bExcluir.setText("Excluir");
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });

        bFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Filtro-16.png"))); // NOI18N
        bFiltrar.setText("Filtrar");
        bFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltrarActionPerformed(evt);
            }
        });

        jLabel9.setText("Locadora");

        bLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Vassoura-16.png"))); // NOI18N
        bLimpar.setText("Limpar");
        bLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimparActionPerformed(evt);
            }
        });

        jLabel11.setText("Base");

        jLabel15.setText("KM");

        jLabel18.setText("Data");

        try {
            fTextData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTextData.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fTextDataFocusGained(evt);
            }
        });

        cBoxPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxPlacaActionPerformed(evt);
            }
        });

        fTextKm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        fTextKm.setText("0,00");
        fTextKm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fTextKmFocusGained(evt);
            }
        });

        tAreaObservacoes.setColumns(20);
        tAreaObservacoes.setRows(5);
        jScrollPane2.setViewportView(tAreaObservacoes);

        jLabel3.setText("Observações");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Próxima Revisão");

        lRevisao.setText("Próxima Revisão");

        jLabel6.setText("KM Atual");

        lKMAtual.setText("KM Atual");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lKMAtual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lRevisao, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lRevisao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lKMAtual)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lID))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tBoxBase, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fTextKm)
                                    .addComponent(cBoxPlaca, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cBoxLocadora, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fTextData, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cBoxPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cBoxLocadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tBoxBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fTextData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fTextKm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)))
                            .addComponent(jScrollPane2)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bFiltrar)
                    .addComponent(bAtualizar)
                    .addComponent(bExcluir)
                    .addComponent(bSalvar)
                    .addComponent(bLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaManutencaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaManutencaoMouseClicked
        if (tabelaManutencao.getSelectedRow() != -1) {
            lID.setText(tabelaManutencao.getValueAt(tabelaManutencao.getSelectedRow(), 0).toString());
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = ConexaoMySQL.getConexaoMySQL();
                java.sql.Statement st = conn.createStatement();
                st.executeQuery("SELECT * FROM `revisoes` WHERE `ID` = " + this.lID.getText());
                ResultSet rs = st.getResultSet();

                while (rs.next()) {
                    SimpleDateFormat fordata = new SimpleDateFormat("yyyy-MM-dd");
                    DecimalFormat df = new DecimalFormat("0.00");

                    try {
                        Date data = fordata.parse((String) rs.getString("DATA"));
                        SimpleDateFormat forma = new SimpleDateFormat("dd/MM/yyyy");
                        String datafor = (String) forma.format(data);
                        this.fTextData.setValue(datafor);

                    } catch (ParseException ex) {
                        Logger.getLogger(CadastroRevisao.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    this.cBoxPlaca.setSelectedItem(rs.getString("PLACA"));
                    this.cBoxLocadora.setSelectedItem(rs.getString("LOCADORA"));
                    this.fTextKm.setText(df.format(rs.getDouble("KM")));
                    this.tBoxBase.setText(rs.getString("BASE"));
                    this.tAreaObservacoes.setText(rs.getString("OBSERVACAO"));
                }
                ConexaoMySQL.FecharConexao();
            } catch (SQLException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
                ConexaoMySQL.FecharConexao();
            }
        }
    }//GEN-LAST:event_tabelaManutencaoMouseClicked

    private void bFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltrarActionPerformed
        filtrar();
    }//GEN-LAST:event_bFiltrarActionPerformed

    private void bAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtualizarActionPerformed

        Revisao rev = new Revisao();
        RevisaoAtualizar revatu = new RevisaoAtualizar();

        SimpleDateFormat fordata = new SimpleDateFormat("dd/MM/yyyy");
        try {
            Date data = fordata.parse((String) this.fTextData.getText());
            SimpleDateFormat forma = new SimpleDateFormat("yyyy-MM-dd");
            String datafor = (String) forma.format(data);
            rev.setData(datafor);

        } catch (ParseException ex) {
            Logger.getLogger(CadastroRevisao.class.getName()).log(Level.SEVERE, null, ex);
        }
        String valortransformado = ((String) this.fTextKm.getText());
        valortransformado = valortransformado.replace(".", "");
        valortransformado = valortransformado.replace(",", ".");

        rev.setId(Integer.parseInt(lID.getText()));
        rev.setPlaca((String) cBoxPlaca.getSelectedItem());
        rev.setLocadora((String) cBoxLocadora.getSelectedItem());
        rev.setBase(tBoxBase.getText());
        rev.setKm(Double.parseDouble(valortransformado));
        rev.setObs(tAreaObservacoes.getText());

        revatu.RevisaoAtualizar(rev);
        limpar();
        filtrar();
        JOptionPane.showMessageDialog(this, "Revisão atualizada com sucesso");
    }//GEN-LAST:event_bAtualizarActionPerformed

    private void bSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarActionPerformed
        Revisao rev = new Revisao();
        RevisaoSalvar revsalv = new RevisaoSalvar();
        SimpleDateFormat fordata = new SimpleDateFormat("dd/MM/yyyy");
        try {
            Date datarev = fordata.parse((String) this.fTextData.getText());
            SimpleDateFormat forma = new SimpleDateFormat("yyyy-MM-dd");
            String datarevfor = (String) forma.format(datarev);
            rev.setData(datarevfor);

        } catch (ParseException ex) {
            Logger.getLogger(CadastroRevisao.class.getName()).log(Level.SEVERE, null, ex);
        }
        String valortransformado = ((String) this.fTextKm.getText());
        valortransformado = valortransformado.replace(".", "");
        valortransformado = valortransformado.replace(",", ".");

        rev.setPlaca((String) cBoxPlaca.getSelectedItem());
        rev.setLocadora((String) cBoxLocadora.getSelectedItem());
        rev.setBase(tBoxBase.getText());
        rev.setKm(Double.parseDouble(valortransformado));
        rev.setObs(tAreaObservacoes.getText());

        revsalv.RevisaoSalvar(rev);
        limpar();
        filtrar();
        JOptionPane.showMessageDialog(this, "Revisão cadastrada com sucesso");
    }//GEN-LAST:event_bSalvarActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        if (lID.getText() == "") {
            JOptionPane.showMessageDialog(this, "Selecione uma revisão clicando na tabela");
            return;
        }
        Revisao rev = new Revisao();
        RevisaoExcluir revexc = new RevisaoExcluir();
        rev.setId(Integer.parseInt(lID.getText()));
        revexc.RevisaoExcluir(rev);
        limpar();
        filtrar();
        JOptionPane.showMessageDialog(this, "Revisão excluída com sucesso");
    }//GEN-LAST:event_bExcluirActionPerformed

    private void bLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimparActionPerformed
        limpar();
        filtrar();
    }//GEN-LAST:event_bLimparActionPerformed

    private void fTextDataFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTextDataFocusGained
        this.fTextData.setText("");
    }//GEN-LAST:event_fTextDataFocusGained

    private void fTextKmFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTextKmFocusGained
        this.fTextKm.setText("");
    }//GEN-LAST:event_fTextKmFocusGained

    private void cBoxPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxPlacaActionPerformed
        proximaRevisao();
    }//GEN-LAST:event_cBoxPlacaActionPerformed

    /**
     * @param args the command line arguments
     */
    public void filtrar() {
        DefaultTableModel modelo = (DefaultTableModel) tabelaManutencao.getModel();
        tabelaManutencao.setRowSorter(new TableRowSorter(modelo));
        modelo.setNumRows(0);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT * FROM `revisoes` WHERE `PLACA` LIKE '%"
                    + this.cBoxPlaca.getSelectedItem() + "%' AND `LOCADORA` LIKE '%"
                    + this.cBoxLocadora.getSelectedItem() + "%' AND `BASE` LIKE '%"
                    + this.tBoxBase.getText() + "%' ORDER BY `PLACA`");
            ResultSet rs = st.getResultSet();

            while (rs.next()) {
                SimpleDateFormat formatado = new SimpleDateFormat("dd/MM/yyyy");
                String data = formatado.format(rs.getDate("DATA"));

                modelo.addRow(new Object[]{
                    rs.getInt("ID"),
                    rs.getString("PLACA"),
                    rs.getString("LOCADORA"),
                    rs.getString("BASE"),
                    rs.getDouble("KM"),
                    data,});
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void limpar() {
        this.cBoxPlaca.setSelectedItem("");
        this.cBoxLocadora.setSelectedItem("");
        this.tBoxBase.setText("");
        this.fTextData.setText("");
        this.fTextKm.setText("0");
    }

    public void carregarPlaca() {
        this.cBoxPlaca.removeAllItems();
        this.cBoxPlaca.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT PLACA FROM `veiculos` ORDER BY PLACA");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxPlaca.addItem(rs.getString("PLACA"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void carregarLocadora() {
        this.cBoxLocadora.removeAllItems();
        this.cBoxLocadora.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT LOCADOR FROM `veiculos` ORDER BY LOCADOR");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxLocadora.addItem(rs.getString("LOCADOR"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void proximaRevisao() {

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT PLACA, MAX(DATA) AS LASTDATE, MAX(KM) AS MAXKM FROM `revisoes` WHERE `PLACA` LIKE '%"
                    + this.cBoxPlaca.getSelectedItem() + "%'");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                if (rs.getString("PLACA") != null) {
                    SimpleDateFormat formatado = new SimpleDateFormat("dd/MM/yyyy");
                    Date data = rs.getDate("LASTDATE");
                    data.setDate(data.getDate() + 180);
                    SimpleDateFormat dataFormatada = new SimpleDateFormat("dd/MM/yyyy");
                    this.lRevisao.setText(dataFormatada.format(data));
                    this.lKMAtual.setText(rs.getString("MAXKM"));
                }
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/br/com/controleorcamento/imagens/LDC_logo.png")));
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroRevisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroRevisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroRevisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroRevisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroRevisao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtualizar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JButton bFiltrar;
    private javax.swing.JButton bLimpar;
    private javax.swing.JButton bSalvar;
    private javax.swing.JComboBox<Object> cBoxLocadora;
    private javax.swing.JComboBox<Object> cBoxPlaca;
    private javax.swing.JFormattedTextField fTextData;
    private javax.swing.JFormattedTextField fTextKm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lID;
    private javax.swing.JLabel lKMAtual;
    private javax.swing.JLabel lRevisao;
    private javax.swing.JTextArea tAreaObservacoes;
    private javax.swing.JTextField tBoxBase;
    private javax.swing.JTable tabelaManutencao;
    // End of variables declaration//GEN-END:variables
}

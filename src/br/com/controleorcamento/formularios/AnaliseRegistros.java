/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.controleorcamento.formularios;

import br.com.controleorcamento.atividades.AnaliseAtualizar;
import br.com.controleorcamento.atividades.AnaliseSalvar;
import br.com.controleorcamento.atividades.ConexaoMySQL;
import br.com.controleorcamento.objeto.Analise;
import br.com.controleorcamento.objeto.DataHoje;
import br.com.controleorcamento.objeto.UsuarioLogado;
import java.awt.Color;
import java.awt.Component;
import java.awt.Toolkit;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rosaan
 */
public class AnaliseRegistros extends javax.swing.JFrame {

    /**
     * Creates new form AnaliseOrcamento
     */
    public AnaliseRegistros() {
        initComponents();
        selmes();
        carregarRegiao();
        carregarFilial();
        carregarMagnitude();
        carregarCentroCusto();
        carregarContaC();
        carregarResponsavel();
        carregarArea();
        acesso();
        filtrar();
        limparParte();
        setIcon();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAnalises = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cBoxMagnitude = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cBoxRegiao = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cBoxFilial = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cBoxCentroCusto = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cBoxConta = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        bLimpar = new javax.swing.JButton();
        lID = new javax.swing.JLabel();
        cBoxMes = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cBoxTipoOrcamento = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        lCentroCusto2 = new javax.swing.JLabel();
        bFiltrar = new javax.swing.JButton();
        bInserir = new javax.swing.JButton();
        cBoxPlataforma = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cBoxNomeUsuario = new javax.swing.JComboBox<>();
        checkBoxResponsavel = new javax.swing.JCheckBox();
        cBoxPreJustificativa = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lDiferencaMes = new javax.swing.JLabel();
        lRealMes = new javax.swing.JLabel();
        lOrcadoMes = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lOrcadoAcum = new javax.swing.JLabel();
        lRealAcum = new javax.swing.JLabel();
        lDiferencaAcum = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lNumeroAnalises = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cBoxArea = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabelaAnalises.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Plataforma", "Região", "Centro de Custo", "Descrição C.C.", "Filial", "Magnitude", "Conta", "Descrição da Conta", "BDG Mês", "Real Mês", "Diferença Mês", "BDG Acum", "Real Acum", "Diferença Acum", "Responsável"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAnalises.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tabelaAnalises.setSelectionForeground(new java.awt.Color(51, 153, 255));
        tabelaAnalises.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAnalisesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaAnalises);
        if (tabelaAnalises.getColumnModel().getColumnCount() > 0) {
            tabelaAnalises.getColumnModel().getColumn(0).setPreferredWidth(45);
        }

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Pesquisa-16.png"))); // NOI18N
        jLabel1.setText("Inserção e Controle de Justificativas");

        jLabel2.setText("Magnitude");

        cBoxMagnitude.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxMagnitudePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxMagnitudePopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel3.setText("Região");

        cBoxRegiao.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxRegiaoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxRegiaoPopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel4.setText("Filial");

        cBoxFilial.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxFilialPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxFilialPopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel5.setText("Centro de Custo");

        cBoxCentroCusto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxCentroCustoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxCentroCustoPopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel6.setText("Conta");

        cBoxConta.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxContaPopupMenuWillBecomeVisible(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        bLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Vassoura-16.png"))); // NOI18N
        bLimpar.setText("Limpar");
        bLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimparActionPerformed(evt);
            }
        });

        cBoxMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" }));
        cBoxMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxMesActionPerformed(evt);
            }
        });

        jLabel7.setText("Mês");

        jLabel8.setText("Orçamento");

        cBoxTipoOrcamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BDG", "RFC" }));
        cBoxTipoOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxTipoOrcamentoActionPerformed(evt);
            }
        });

        bFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Filtro-16.png"))); // NOI18N
        bFiltrar.setText("Filtrar");
        bFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltrarActionPerformed(evt);
            }
        });

        bInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Salvar-16.png"))); // NOI18N
        bInserir.setText("Inserir Análise");
        bInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInserirActionPerformed(evt);
            }
        });

        cBoxPlataforma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "SOJA", "MILHO", "ARROZ" }));

        jLabel10.setText("Plataforma");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("Vincular Responsável para Resposta de Análise");

        cBoxNomeUsuario.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxNomeUsuarioPopupMenuWillBecomeVisible(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(cBoxNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cBoxNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        checkBoxResponsavel.setText("Selecionar apenas análise para responsável");

        cBoxPreJustificativa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Bonus", "Cancelamentos Extemporâneos", "Dentro do Orçamento Anual", "Desligamento de Profissional", "Encargos", "Horas Extras", "Multa", "Orçamento Subestimado", "Orçamento Superestimado", "Reclassificação", "Sem Orçamento", "Viagem", "" }));

        jLabel17.setText("Tipo de Justificativa");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel15.setText("Informações");

        jLabel14.setText("Valor Orçado");

        jLabel11.setText("Valor Real");

        jLabel20.setText("Diferença");

        lDiferencaMes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lDiferencaMes.setText("Diferença");

        lRealMes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lRealMes.setText("Valor Real");

        lOrcadoMes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lOrcadoMes.setText("Valor Orçado");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Mês");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Acumulado");

        lOrcadoAcum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lOrcadoAcum.setText("Valor Orçado");

        lRealAcum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lRealAcum.setText("Valor Real");

        lDiferencaAcum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lDiferencaAcum.setText("Diferença");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lRealMes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lOrcadoMes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lDiferencaMes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lOrcadoAcum, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(lRealAcum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lDiferencaAcum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lOrcadoMes)
                    .addComponent(lOrcadoAcum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lRealMes)
                    .addComponent(lRealAcum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(lDiferencaMes)
                    .addComponent(lDiferencaAcum))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        lOrcadoMes.getAccessibleContext().setAccessibleDescription("");

        jLabel16.setText("Análises Cadastradas:");

        lNumeroAnalises.setText("0");

        jLabel19.setText("Área");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lID)
                        .addGap(326, 326, 326))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cBoxCentroCusto, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cBoxMagnitude, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cBoxFilial, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cBoxRegiao, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cBoxConta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cBoxPlataforma, javax.swing.GroupLayout.Alignment.LEADING, 0, 212, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(bLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lNumeroAnalises, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(187, 187, 187)
                                        .addComponent(cBoxPreJustificativa, 0, 183, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lCentroCusto2, javax.swing.GroupLayout.DEFAULT_SIZE, 7, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cBoxTipoOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cBoxMes, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cBoxArea, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(checkBoxResponsavel)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(lID))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cBoxTipoOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cBoxMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cBoxArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(checkBoxResponsavel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cBoxPlataforma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cBoxRegiao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cBoxFilial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cBoxMagnitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cBoxCentroCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cBoxConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bFiltrar)
                            .addComponent(bLimpar))
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel16)
                                    .addComponent(lNumeroAnalises))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cBoxPreJustificativa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(lCentroCusto2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(126, 126, 126))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(bInserir))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimparActionPerformed
        limparParte();
    }//GEN-LAST:event_bLimparActionPerformed

    private void tabelaAnalisesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAnalisesMouseClicked
        if (tabelaAnalises.getSelectedRow() != -1) {
            lID.setText(tabelaAnalises.getValueAt(tabelaAnalises.getSelectedRow(), 0).toString());
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = ConexaoMySQL.getConexaoMySQL();
                java.sql.Statement st = conn.createStatement();
                st.executeQuery("SELECT * FROM `analiseorcamento` WHERE `ID` = " + this.lID.getText());
                ResultSet rs = st.getResultSet();
                while (rs.next()) {
                    this.cBoxPlataforma.setSelectedItem(rs.getString("PLATAFORMA"));
                    this.cBoxRegiao.setSelectedItem(rs.getString("REGIAO"));
                    this.cBoxFilial.addItem(rs.getString("DESCRICAO_FILIAL"));
                    this.cBoxFilial.setSelectedItem(rs.getString("DESCRICAO_FILIAL"));
                    this.cBoxMagnitude.setSelectedItem(rs.getString("MAGNITUDE_CONTA"));
                    this.cBoxCentroCusto.setSelectedItem(rs.getString("CENTRO_DE_CUSTO"));
                    this.cBoxConta.setSelectedItem(rs.getString("CONTA"));
                    this.jTextArea1.setText(rs.getString("ANALISE"));
                    this.cBoxNomeUsuario.setSelectedItem(rs.getString("RESPONSAVEL"));
                    this.cBoxPreJustificativa.setSelectedItem(rs.getString("TIPOJUS"));
                    this.lRealMes.setText(rs.getString("REALIZADO"));
                    this.lOrcadoMes.setText(rs.getString("BDG"));
                    this.lRealAcum.setText(rs.getString("REAL_ACUM"));
                    this.lOrcadoAcum.setText(rs.getString("BDG_ACUM"));
                }
                ConexaoMySQL.FecharConexao();
            } catch (SQLException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
                ConexaoMySQL.FecharConexao();
            }
            this.lDiferencaMes.setText(tabelaAnalises.getValueAt(tabelaAnalises.getSelectedRow(), 11).toString());
            this.lDiferencaAcum.setText(tabelaAnalises.getValueAt(tabelaAnalises.getSelectedRow(), 14).toString());
        }

    }//GEN-LAST:event_tabelaAnalisesMouseClicked

    private void cBoxMagnitudePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxMagnitudePopupMenuWillBecomeVisible
        carregarMagnitude();
    }//GEN-LAST:event_cBoxMagnitudePopupMenuWillBecomeVisible

    private void cBoxCentroCustoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxCentroCustoPopupMenuWillBecomeVisible
        carregarCentroCusto();
    }//GEN-LAST:event_cBoxCentroCustoPopupMenuWillBecomeVisible

    private void cBoxContaPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxContaPopupMenuWillBecomeVisible
        carregarContaC();
    }//GEN-LAST:event_cBoxContaPopupMenuWillBecomeVisible

    private void bInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInserirActionPerformed
        Analise analise = new Analise();
        AnaliseSalvar salvaranalise = new AnaliseSalvar();
        Date dataformatada = new Date();
        SimpleDateFormat forma = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String datas = forma.format(dataformatada);

        analise.setMagnitude((String) cBoxMagnitude.getSelectedItem());
        analise.setRegiao((String) cBoxRegiao.getSelectedItem());
        analise.setFilial((String) cBoxFilial.getSelectedItem());
        analise.setConta((String) cBoxConta.getSelectedItem());
        analise.setCentrocusto((String) cBoxCentroCusto.getSelectedItem());
        analise.setPlataforma((String) cBoxPlataforma.getSelectedItem());
        analise.setBorr((String) cBoxTipoOrcamento.getSelectedItem());
        analise.setMes((String) cBoxMes.getSelectedItem());
        analise.setAnalise(jTextArea1.getText());
        analise.setRealmes(Double.parseDouble((String) this.lRealMes.getText()));
        analise.setRealacum(Double.parseDouble((String) this.lRealAcum.getText()));
        analise.setBdgmes(Double.parseDouble((String) this.lOrcadoMes.getText()));
        analise.setBdgacum(Double.parseDouble((String) this.lOrcadoAcum.getText()));
        analise.setUser(UsuarioLogado.usuario);
        analise.setDatareg(datas);
        analise.setSituacao("ANALISADO");
        analise.setTipoanalise((String) cBoxPreJustificativa.getSelectedItem());

        if (analise.getTipoanalise() == null) {
            analise.setTipoanalise("");
        }
        if (jPanel1.isVisible()) {
            analise.setResponsavel((String) cBoxNomeUsuario.getSelectedItem());
        } else {
            analise.setResponsavel("");
        }

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT * FROM `orcamentocontrole` WHERE `CONTA` LIKE '%"
                    + this.cBoxConta.getSelectedItem() + "'");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                analise.setDescconta(rs.getString("DESCRICAO_CONTA"));
            }
            st.executeQuery("SELECT * FROM `orcamentocontrole` WHERE `CENTRO_DE_CUSTO` LIKE '%"
                    + this.cBoxCentroCusto.getSelectedItem() + "'");
            ResultSet rss = st.getResultSet();
            while (rss.next()) {
                analise.setDesccentrocusto(rss.getString("DESCRICAO_CC"));
                analise.setArea(rss.getString("AREA"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
        salvaranalise.AnaliseSalvar(analise);
        if (this.checkBoxResponsavel.isSelected()) {
            Analise analise1 = new Analise();
            AnaliseAtualizar autalizaranalise = new AnaliseAtualizar();
            analise1.setSituacao("ANALISADO");
            analise1.setId(Integer.parseInt(lID.getText()));
            autalizaranalise.AnaliseAtualizar(analise1);
        }
        filtrar();
        JOptionPane.showMessageDialog(this, "Análise incluida com sucesso");
    }//GEN-LAST:event_bInserirActionPerformed

    private void cBoxNomeUsuarioPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxNomeUsuarioPopupMenuWillBecomeVisible
        carregarResponsavel();
    }//GEN-LAST:event_cBoxNomeUsuarioPopupMenuWillBecomeVisible

    private void cBoxMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxMesActionPerformed
        filtrar();
        carregarMagnitude();
        carregarCentroCusto();
        carregarContaC();
    }//GEN-LAST:event_cBoxMesActionPerformed

    private void cBoxTipoOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxTipoOrcamentoActionPerformed
        filtrar();
        carregarMagnitude();
        carregarCentroCusto();
        carregarContaC();
    }//GEN-LAST:event_cBoxTipoOrcamentoActionPerformed

    private void bFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltrarActionPerformed
        filtrar();
    }//GEN-LAST:event_bFiltrarActionPerformed

    private void cBoxFilialPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxFilialPopupMenuWillBecomeVisible
        carregarFilial();
    }//GEN-LAST:event_cBoxFilialPopupMenuWillBecomeVisible

    private void cBoxRegiaoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxRegiaoPopupMenuWillBecomeInvisible
        this.cBoxFilial.setSelectedItem("");
        this.cBoxMagnitude.setSelectedItem("");
        this.cBoxCentroCusto.setSelectedItem("");
        this.cBoxConta.setSelectedItem("");
    }//GEN-LAST:event_cBoxRegiaoPopupMenuWillBecomeInvisible

    private void cBoxFilialPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxFilialPopupMenuWillBecomeInvisible
        this.cBoxMagnitude.setSelectedItem("");
        this.cBoxCentroCusto.setSelectedItem("");
        this.cBoxConta.setSelectedItem("");
    }//GEN-LAST:event_cBoxFilialPopupMenuWillBecomeInvisible

    private void cBoxMagnitudePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxMagnitudePopupMenuWillBecomeInvisible
        this.cBoxCentroCusto.setSelectedItem("");
        this.cBoxConta.setSelectedItem("");
    }//GEN-LAST:event_cBoxMagnitudePopupMenuWillBecomeInvisible

    private void cBoxCentroCustoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxCentroCustoPopupMenuWillBecomeInvisible
        this.cBoxConta.setSelectedItem("");
    }//GEN-LAST:event_cBoxCentroCustoPopupMenuWillBecomeInvisible

    private void cBoxRegiaoPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxRegiaoPopupMenuWillBecomeVisible
        carregarRegiao();
    }//GEN-LAST:event_cBoxRegiaoPopupMenuWillBecomeVisible

    /**
     * @param args the command line arguments
     */
    public void carregarRegiao() {
        this.cBoxRegiao.removeAllItems();
        this.cBoxRegiao.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT REGIAO FROM `analiseorcamento` WHERE `PLATAFORMA` LIKE '%"
                    + this.cBoxPlataforma.getSelectedItem() + "' AND `MES` LIKE '%"
                    + this.cBoxMes.getSelectedItem() + "' ORDER BY REGIAO");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxRegiao.addItem(rs.getString("REGIAO"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void carregarFilial() {
        this.cBoxFilial.removeAllItems();
        this.cBoxFilial.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT DESCRICAO_FILIAL FROM `analiseorcamento` WHERE `REGIAO` LIKE '%"
                    + this.cBoxRegiao.getSelectedItem() + "' AND `PLATAFORMA` LIKE '%"
                    + this.cBoxPlataforma.getSelectedItem() + "' AND `MES` LIKE '%"
                    + this.cBoxMes.getSelectedItem() + "' ORDER BY DESCRICAO_FILIAL");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxFilial.addItem(rs.getString("DESCRICAO_FILIAL"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void carregarMagnitude() {
        this.cBoxMagnitude.removeAllItems();
        this.cBoxMagnitude.removeItem("");
        this.cBoxMagnitude.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT MAGNITUDE_CONTA FROM `analiseorcamento` WHERE `REGIAO` LIKE '%"
                    + this.cBoxRegiao.getSelectedItem() + "' AND `PLATAFORMA` LIKE '%"
                    + this.cBoxPlataforma.getSelectedItem() + "' AND `DESCRICAO_FILIAL` LIKE '%"
                    + this.cBoxFilial.getSelectedItem() + "' AND `MES` LIKE '%"
                    + this.cBoxMes.getSelectedItem() + "' ORDER BY MAGNITUDE_CONTA");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxMagnitude.addItem(rs.getString("MAGNITUDE_CONTA"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void carregarCentroCusto() {
        this.cBoxCentroCusto.removeAllItems();
        this.cBoxCentroCusto.removeItem("");
        this.cBoxCentroCusto.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT CENTRO_DE_CUSTO FROM `analiseorcamento` WHERE `REGIAO` LIKE '%"
                    + this.cBoxRegiao.getSelectedItem() + "' AND `PLATAFORMA` LIKE '%"
                    + this.cBoxPlataforma.getSelectedItem() + "' AND `DESCRICAO_FILIAL` LIKE '%"
                    + this.cBoxFilial.getSelectedItem() + "' AND `MAGNITUDE_CONTA` LIKE '%"
                    + this.cBoxMagnitude.getSelectedItem() + "' AND `MES` LIKE '%"
                    + this.cBoxMes.getSelectedItem() + "' ORDER BY CENTRO_DE_CUSTO");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxCentroCusto.addItem(rs.getString("CENTRO_DE_CUSTO"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void carregarContaC() {
        this.cBoxConta.removeAllItems();
        this.cBoxConta.removeItem("");
        this.cBoxConta.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT CONTA FROM `analiseorcamento` WHERE `REGIAO` LIKE '%"
                    + this.cBoxRegiao.getSelectedItem() + "' AND `PLATAFORMA` LIKE '%"
                    + this.cBoxPlataforma.getSelectedItem() + "' AND `DESCRICAO_FILIAL` LIKE '%"
                    + this.cBoxFilial.getSelectedItem() + "' AND `MAGNITUDE_CONTA` LIKE '%"
                    + this.cBoxMagnitude.getSelectedItem() + "' AND `CENTRO_DE_CUSTO` LIKE '%"
                    + this.cBoxCentroCusto.getSelectedItem() + "' AND `MES` LIKE '%"
                    + this.cBoxMes.getSelectedItem() + "' ORDER BY CONTA");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxConta.addItem(rs.getString("CONTA"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void carregarResponsavel() {
        this.cBoxNomeUsuario.removeAllItems();
        this.cBoxNomeUsuario.removeItem("");
        this.cBoxNomeUsuario.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT NOME FROM `usuario` WHERE `REGIAO` LIKE '%"
                    + this.cBoxRegiao.getSelectedItem() + "' AND `FILIAL` LIKE '%"
                    + this.cBoxFilial.getSelectedItem() + "' ORDER BY NOME");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxNomeUsuario.addItem(rs.getString("NOME"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void limparParte() {
        this.cBoxRegiao.addItem("");
        this.cBoxFilial.addItem("");
        this.cBoxMagnitude.addItem("");
        this.cBoxCentroCusto.addItem("");
        this.cBoxConta.addItem("");
        this.cBoxPlataforma.addItem("");
        this.cBoxMagnitude.setSelectedItem("");
        this.cBoxCentroCusto.setSelectedItem("");
        this.cBoxConta.setSelectedItem("");
        this.lID.setText("");
        this.jTextArea1.setText("");
        this.cBoxPlataforma.setSelectedItem("");
        if (("Operacional").equals(UsuarioLogado.perfil)) {

        } else if (("Supervisor").equals(UsuarioLogado.perfil)) {
            this.cBoxFilial.setSelectedItem("");
        } else {
            this.cBoxRegiao.setSelectedItem("");
            this.cBoxFilial.setSelectedItem("");
        }
    }

    public void diferencaMes() {
        DecimalFormat df = new DecimalFormat("###,###,###,##0.00");
        df.setRoundingMode(RoundingMode.UP);
        int count = tabelaAnalises.getRowCount();
        for (int row = count - 1; row >= 0; row--) {
            Double realmes = (Double) tabelaAnalises.getValueAt(row, 10);
            Double bdgmes = (Double) tabelaAnalises.getValueAt(row, 9);
            String dm = String.valueOf(df.format(bdgmes - realmes));
            dm = dm.replace(".", "");
            dm = dm.replace(",", ".");
            Double difmes = Double.parseDouble(dm);
            tabelaAnalises.setValueAt(difmes, row, 11);

            Double realacum = (Double) tabelaAnalises.getValueAt(row, 13);
            Double bdgacum = (Double) tabelaAnalises.getValueAt(row, 12);
            String da = String.valueOf(df.format(bdgmes - realmes));
            da = da.replace(".", "");
            da = da.replace(",", ".");
            Double difacum = Double.parseDouble(da);
            tabelaAnalises.setValueAt(difacum, row, 14);
        }
    }

    public void filtrar() {
        String responsavel = "";
        String textselarea = "";
        if (this.cBoxArea.getSelectedItem() == null) {
            textselarea = "";
        } else {
            textselarea = (String) this.cBoxArea.getSelectedItem();
        }
        String areauserlog = UsuarioLogado.area;
        if (this.checkBoxResponsavel.isSelected()) {
            responsavel = " AND `RESPONSAVEL` != ''";
        }
        String area = "";
        if ("Operacional".equals(UsuarioLogado.perfil)) {
            if (!textselarea.equals(areauserlog)) {
                area = " AND `AREA` LIKE '%" + UsuarioLogado.area + "'";
            }
        }
        DefaultTableModel modelo = (DefaultTableModel) tabelaAnalises.getModel();
        tabelaAnalises.setRowSorter(new TableRowSorter(modelo));
        modelo.setNumRows(0);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT ID, ID, MAGNITUDE_CONTA, REGIAO, DESCRICAO_FILIAL, CONTA, DESCRICAO_CONTA, CENTRO_DE_CUSTO, DESCRICAO_CC, PLATAFORMA, MES, BORR, REALIZADO, BDG, REAL_ACUM, BDG_ACUM, ANALISE, USUARIO, DATA, RESPONSAVEL, SITUACAO, AREA FROM `analiseorcamento` WHERE `REGIAO` LIKE '%"
                    + this.cBoxRegiao.getSelectedItem() + "' AND `DESCRICAO_FILIAL` LIKE '%"
                    + this.cBoxFilial.getSelectedItem() + "' AND `MAGNITUDE_CONTA` LIKE '%"
                    + this.cBoxMagnitude.getSelectedItem() + "' AND `CENTRO_DE_CUSTO` LIKE '%"
                    + this.cBoxCentroCusto.getSelectedItem() + "' AND `CONTA` LIKE '%"
                    + this.cBoxConta.getSelectedItem() + "' AND `PLATAFORMA` LIKE '%"
                    + this.cBoxPlataforma.getSelectedItem() + "' AND `MES` LIKE '%"
                    + this.cBoxMes.getSelectedItem() + "' AND `BORR` LIKE '%"
                    + this.cBoxTipoOrcamento.getSelectedItem() + "' AND `AREA` LIKE '%"
                    + this.cBoxArea.getSelectedItem() + "'" + area + "" + responsavel + ";");
            ResultSet rs = st.getResultSet();
            int teste = 0;
            while (rs.next()) {
                teste++;
                DecimalFormat df = new DecimalFormat("###,###,###,##0.00");
                df.setRoundingMode(RoundingMode.UP);

                Double bdgmes = rs.getDouble("BDG");
                String bm = String.valueOf(df.format(bdgmes));
                bm = bm.replace(".", "");
                bm = bm.replace(",", ".");
                bdgmes = Double.parseDouble(bm);

                Double realmes = rs.getDouble("REALIZADO");
                String rm = String.valueOf(df.format(realmes));
                rm = rm.replace(".", "");
                rm = rm.replace(",", ".");
                realmes = Double.parseDouble(rm);

                Double bdgacum = rs.getDouble("BDG_ACUM");
                String ba = String.valueOf(df.format(bdgacum));
                ba = ba.replace(".", "");
                ba = ba.replace(",", ".");
                bdgacum = Double.parseDouble(ba);

                Double realacum = rs.getDouble("REAL_ACUM");
                String ra = String.valueOf(df.format(realacum));
                ra = ra.replace(".", "");
                ra = ra.replace(",", ".");
                realacum = Double.parseDouble(ra);

                modelo.addRow(new Object[]{
                    rs.getString("ID"),
                    rs.getString("PLATAFORMA"),
                    rs.getObject("REGIAO"),
                    rs.getString("CENTRO_DE_CUSTO"),
                    rs.getString("DESCRICAO_CC"),
                    rs.getString("DESCRICAO_FILIAL"),
                    rs.getString("MAGNITUDE_CONTA"),
                    rs.getString("CONTA"),
                    rs.getString("DESCRICAO_CONTA"),
                    bdgmes,
                    realmes,
                    rs.getDouble(2),
                    bdgacum,
                    realacum,
                    rs.getDouble(2),
                    rs.getString("RESPONSAVEL"),});
            }

            if ("Operacional".equals(UsuarioLogado.perfil)) {
                if (!textselarea.equals(areauserlog)) {
                    st.executeQuery("SELECT ID, ID, MAGNITUDE_CONTA, REGIAO, DESCRICAO_FILIAL, CONTA, DESCRICAO_CONTA, CENTRO_DE_CUSTO, DESCRICAO_CC, PLATAFORMA, MES, BORR, REALIZADO, BDG, REAL_ACUM, BDG_ACUM, ANALISE, USUARIO, DATA, RESPONSAVEL, SITUACAO, AREA FROM `analiseorcamento` WHERE `REGIAO` LIKE '%"
                            + this.cBoxRegiao.getSelectedItem() + "' AND `DESCRICAO_FILIAL` LIKE '%"
                            + this.cBoxFilial.getSelectedItem() + "' AND `MAGNITUDE_CONTA` LIKE '%"
                            + this.cBoxMagnitude.getSelectedItem() + "' AND `MAGNITUDE_CONTA` "
                            + "NOT LIKE 'Employment Cost' AND `CENTRO_DE_CUSTO` LIKE '%"
                            + this.cBoxCentroCusto.getSelectedItem() + "' AND `CONTA` LIKE '%"
                            + this.cBoxConta.getSelectedItem() + "' AND `PLATAFORMA` LIKE '%"
                            + this.cBoxPlataforma.getSelectedItem() + "' AND `MES` LIKE '%"
                            + this.cBoxMes.getSelectedItem() + "' AND `BORR` LIKE '%"
                            + this.cBoxTipoOrcamento.getSelectedItem() + "' AND `AREA` LIKE '%"
                            + this.cBoxArea.getSelectedItem() + "'" + responsavel + ";");
                    ResultSet rss = st.getResultSet();

                    while (rss.next()) {
                        teste++;
                        DecimalFormat df = new DecimalFormat("###,###,###,##0.00");
                        df.setRoundingMode(RoundingMode.UP);

                        Double bdgmes = rss.getDouble("BDG");
                        String bm = String.valueOf(df.format(bdgmes));
                        bm = bm.replace(".", "");
                        bm = bm.replace(",", ".");
                        bdgmes = Double.parseDouble(bm);

                        Double realmes = rss.getDouble("REALIZADO");
                        String rm = String.valueOf(df.format(realmes));
                        rm = rm.replace(".", "");
                        rm = rm.replace(",", ".");
                        realmes = Double.parseDouble(rm);

                        Double bdgacum = rss.getDouble("BDG_ACUM");
                        String ba = String.valueOf(df.format(bdgacum));
                        ba = ba.replace(".", "");
                        ba = ba.replace(",", ".");
                        bdgacum = Double.parseDouble(ba);

                        Double realacum = rss.getDouble("REAL_ACUM");
                        String ra = String.valueOf(df.format(realacum));
                        ra = ra.replace(".", "");
                        ra = ra.replace(",", ".");
                        realacum = Double.parseDouble(ra);

                        modelo.addRow(new Object[]{
                            rss.getString("ID"),
                            rss.getString("PLATAFORMA"),
                            rss.getObject("REGIAO"),
                            rss.getString("CENTRO_DE_CUSTO"),
                            rss.getString("DESCRICAO_CC"),
                            rss.getString("DESCRICAO_FILIAL"),
                            rss.getString("MAGNITUDE_CONTA"),
                            rss.getString("CONTA"),
                            rss.getString("DESCRICAO_CONTA"),
                            bdgmes,
                            realmes,
                            rss.getDouble(2),
                            bdgacum,
                            realacum,
                            rss.getDouble(2),
                            rss.getString("RESPONSAVEL"),});
                    }
                }
            }
            this.lNumeroAnalises.setText(String.valueOf(teste));
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
            ConexaoMySQL.FecharConexao();
        }
        diferencaMes();
        corNaLinha();
    }

    public void selmes() {
        DataHoje dh = new DataHoje();
        dh.Data();
        this.cBoxMes.setSelectedItem(dh.getDatahoje());
    }

    public void corNaLinha() {

        tabelaAnalises.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {
                Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                Color corDiferencaMes = new java.awt.Color(255, 182, 193);
                if (column == 11 || column == 14) {
                    Double var = (Double) value;
                    if (var < 0) {
                        cell.setBackground(corDiferencaMes);
                    }
                } else {
                    cell.setBackground(Color.WHITE);
                }
                return cell;
            }
        });
    }

    public void acesso() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT * FROM `usuario` WHERE `USUARIO` LIKE '" + UsuarioLogado.usuario + "';");
            ResultSet rss = st.getResultSet();
            if (rss.first()) {
                if ("Operacional".equals(rss.getString("PERFIL"))) {

                    this.cBoxRegiao.setSelectedItem((String) rss.getString("REGIAO"));
                    this.cBoxFilial.setSelectedItem((String) rss.getString("FILIAL"));
                    this.cBoxRegiao.setEnabled(false);
                    this.cBoxFilial.setEnabled(false);
                    this.jPanel1.setVisible(false);
                } else if ("Administrador".equals(rss.getString("PERFIL"))) {
                } else if ("Supervisor".equals(rss.getString("PERFIL"))) {
                    this.cBoxRegiao.setSelectedItem((String) rss.getString("REGIAO"));
                    this.cBoxRegiao.setEnabled(false);
                } else if ("Observador".equals(rss.getString("PERFIL"))) {
                }
            } else {
                dispose();
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void carregarArea() {
        this.cBoxArea.removeAllItems();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT RESPONSAVEL FROM `orcamentocontrole` ORDER BY RESPONSAVEL");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxArea.addItem(rs.getString("RESPONSAVEL"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/br/com/controleorcamento/imagens/LDC_logo.png")));
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnaliseRegistros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnaliseRegistros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnaliseRegistros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnaliseRegistros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnaliseRegistros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bFiltrar;
    private javax.swing.JButton bInserir;
    private javax.swing.JButton bLimpar;
    private javax.swing.JComboBox<Object> cBoxArea;
    private javax.swing.JComboBox<Object> cBoxCentroCusto;
    private javax.swing.JComboBox<Object> cBoxConta;
    private javax.swing.JComboBox<String> cBoxFilial;
    private javax.swing.JComboBox<Object> cBoxMagnitude;
    private javax.swing.JComboBox<String> cBoxMes;
    private javax.swing.JComboBox<Object> cBoxNomeUsuario;
    private javax.swing.JComboBox<String> cBoxPlataforma;
    private javax.swing.JComboBox<Object> cBoxPreJustificativa;
    private javax.swing.JComboBox<String> cBoxRegiao;
    private javax.swing.JComboBox<String> cBoxTipoOrcamento;
    private javax.swing.JCheckBox checkBoxResponsavel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lCentroCusto2;
    private javax.swing.JLabel lDiferencaAcum;
    private javax.swing.JLabel lDiferencaMes;
    private javax.swing.JLabel lID;
    private javax.swing.JLabel lNumeroAnalises;
    private javax.swing.JLabel lOrcadoAcum;
    private javax.swing.JLabel lOrcadoMes;
    private javax.swing.JLabel lRealAcum;
    private javax.swing.JLabel lRealMes;
    private javax.swing.JTable tabelaAnalises;
    // End of variables declaration//GEN-END:variables

}

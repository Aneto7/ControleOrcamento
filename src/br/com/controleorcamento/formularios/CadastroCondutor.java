/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.controleorcamento.formularios;

import br.com.controleorcamento.atividades.CondutorAtualizar;
import br.com.controleorcamento.atividades.CondutorExcluir;
import br.com.controleorcamento.atividades.CondutorSalvar;
import br.com.controleorcamento.atividades.ConexaoMySQL;
import br.com.controleorcamento.objeto.Condutor;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rosaan
 */
public class CadastroCondutor extends javax.swing.JFrame {

    /**
     * Creates new form CadastroUsuario
     */
    public CadastroCondutor() {
        initComponents();
        carregarUnidade();
        carregarGestorSubRegional();
        carregarGestorRegional();
        carregarGestorDivisional();
        filtrar();
        setIcon();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tBoxMatricula = new javax.swing.JTextField();
        tBoxIButton = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCondutores = new javax.swing.JTable();
        bSalvar = new javax.swing.JButton();
        bAtualizar = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();
        bFiltrar = new javax.swing.JButton();
        lID = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        bLimpar = new javax.swing.JButton();
        tBoxNome = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tBoxCargo = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        tBoxNCNH = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        fTextAdminissao = new javax.swing.JFormattedTextField();
        fTextDataDefensiva = new javax.swing.JFormattedTextField();
        fTextVencimentoCNH = new javax.swing.JFormattedTextField();
        tBoxCentro = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tAreaObservacao = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        cBoxCategoriaCNH = new javax.swing.JComboBox<>();
        cBoxGestorSubRegional = new javax.swing.JComboBox<>();
        cBoxGestorRegional = new javax.swing.JComboBox<>();
        cBoxGestorDivisional = new javax.swing.JComboBox<>();
        cBoxUnidade = new javax.swing.JComboBox<>();
        cBoxEmpresa = new javax.swing.JComboBox<>();
        cBoxArea = new javax.swing.JComboBox<>();
        lRegiao = new javax.swing.JLabel();
        checkBoxForm31 = new javax.swing.JCheckBox();
        checkBoxForm32 = new javax.swing.JCheckBox();
        checkBoxAprovado = new javax.swing.JCheckBox();
        cBoxAtivo = new javax.swing.JComboBox<>();
        checkBoxPoll = new javax.swing.JCheckBox();
        checkBoxTrab = new javax.swing.JCheckBox();
        checkBoxDesig = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Motorista-16.png"))); // NOI18N
        jLabel1.setText("Cadastro de Condutor");

        jLabel2.setText("Matrícula");

        jLabel3.setText("Empresa");

        jLabel4.setText("Area");

        jLabel5.setText("IButton");

        jLabel6.setText("Cargo");

        jLabel7.setText("Unidade");

        jLabel8.setText("Nome");

        tabelaCondutores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Matricula", "Nome", "Centro", "Unidade", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaCondutores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCondutoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaCondutores);

        bSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Salvar-16.png"))); // NOI18N
        bSalvar.setText("Inserir");
        bSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarActionPerformed(evt);
            }
        });

        bAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Atualizações disponíveis-16.png"))); // NOI18N
        bAtualizar.setText("Atualizar");
        bAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtualizarActionPerformed(evt);
            }
        });

        bExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Excluir-16.png"))); // NOI18N
        bExcluir.setText("Excluir");
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });

        bFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Filtro-16.png"))); // NOI18N
        bFiltrar.setText("Filtrar");
        bFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltrarActionPerformed(evt);
            }
        });

        jLabel9.setText("Centro");

        bLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/controleorcamento/imagens/icons8-Vassoura-16.png"))); // NOI18N
        bLimpar.setText("Limpar");
        bLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimparActionPerformed(evt);
            }
        });

        jLabel10.setText("Regional");

        jLabel11.setText("Poll");

        jLabel12.setText("Trab");

        jLabel13.setText("Data Admissão");

        jLabel14.setText("Data Real Defensiva");

        jLabel15.setText("Desig");

        jLabel16.setText("CNH");

        jLabel17.setText("Vencimento CNH");

        jLabel18.setText("Categoria CNH");

        jLabel19.setText("Form 31");

        jLabel20.setText("Form 32");

        jLabel21.setText("Gestor SubRegional");

        jLabel22.setText("Gestor Regional");

        jLabel23.setText("Aprovado");

        jLabel24.setText("Status");

        jLabel25.setText("Observação");

        try {
            fTextAdminissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTextAdminissao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fTextAdminissaoFocusGained(evt);
            }
        });

        try {
            fTextDataDefensiva.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTextDataDefensiva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fTextDataDefensivaFocusGained(evt);
            }
        });

        try {
            fTextVencimentoCNH.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTextVencimentoCNH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fTextVencimentoCNHFocusGained(evt);
            }
        });

        tAreaObservacao.setColumns(20);
        tAreaObservacao.setRows(5);
        jScrollPane2.setViewportView(tAreaObservacao);

        jLabel26.setText("Gestor Divisional");

        cBoxCategoriaCNH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "A", "A|B", "A|C", "A|D", "A|E", "B", "C", "D", "E" }));

        cBoxGestorSubRegional.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxGestorSubRegionalPopupMenuWillBecomeVisible(evt);
            }
        });

        cBoxGestorRegional.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxGestorRegionalPopupMenuWillBecomeVisible(evt);
            }
        });

        cBoxGestorDivisional.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxGestorDivisionalPopupMenuWillBecomeVisible(evt);
            }
        });

        cBoxUnidade.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cBoxUnidadePopupMenuWillBecomeVisible(evt);
            }
        });

        cBoxEmpresa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "BRASIL", "MACROFERTIL", "MACROSEEDS" }));

        cBoxArea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "ADMINISTRATIVO", "CCC", "COMERCIAL", "CONTROLE DE ESTOQUE", "CRÉDITO", "LOGISTICA", "OPERAÇÃO", "RH", "SHE", "" }));

        cBoxAtivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "ATIVO", "INATIVO", "BLOQUEADO" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cBoxGestorDivisional, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cBoxGestorRegional, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cBoxGestorSubRegional, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cBoxCategoriaCNH, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tBoxNCNH)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                            .addComponent(checkBoxDesig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkBoxTrab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkBoxPoll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tBoxNome)
                            .addComponent(tBoxMatricula)
                            .addComponent(tBoxCentro)
                            .addComponent(tBoxIButton))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(checkBoxAprovado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkBoxForm32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkBoxForm31, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fTextVencimentoCNH, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fTextDataDefensiva, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fTextAdminissao, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lRegiao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cBoxUnidade, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tBoxCargo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cBoxArea, javax.swing.GroupLayout.Alignment.LEADING, 0, 281, Short.MAX_VALUE)
                    .addComponent(cBoxEmpresa, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cBoxAtivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(715, 715, 715)
                        .addComponent(lID)))
                .addGap(78, 155, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lID)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tBoxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tBoxMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(cBoxEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tBoxCentro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel4)
                                    .addComponent(cBoxArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tBoxIButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(tBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(cBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                            .addComponent(lRegiao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkBoxPoll)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13)
                                .addComponent(fTextAdminissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkBoxTrab, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(jLabel14)
                                .addComponent(fTextDataDefensiva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkBoxDesig))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tBoxNCNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(fTextVencimentoCNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cBoxCategoriaCNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)))
                    .addComponent(checkBoxForm31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cBoxGestorSubRegional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21)
                        .addComponent(jLabel20))
                    .addComponent(checkBoxForm32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cBoxGestorRegional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22)
                        .addComponent(jLabel23))
                    .addComponent(checkBoxAprovado, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBoxGestorDivisional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel24)
                    .addComponent(cBoxAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bFiltrar)
                            .addComponent(bAtualizar)
                            .addComponent(bExcluir)
                            .addComponent(bSalvar)
                            .addComponent(bLimpar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaCondutoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCondutoresMouseClicked
        if (tabelaCondutores.getSelectedRow() != -1) {
            lID.setText(tabelaCondutores.getValueAt(tabelaCondutores.getSelectedRow(), 0).toString());
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = ConexaoMySQL.getConexaoMySQL();
                java.sql.Statement st = conn.createStatement();
                st.executeQuery("SELECT * FROM `condutor` WHERE `ID` = " + this.lID.getText());
                ResultSet rs = st.getResultSet();
                while (rs.next()) {
                    SimpleDateFormat fordata = new SimpleDateFormat("yyyy-MM-dd");
                    try {
                        Date admissao = fordata.parse((String) rs.getString("DATA_ADMISSAO"));
                        Date defensiva = fordata.parse((String) rs.getString("DATA_REALIZACAO_DEFENSIVA"));
                        Date vencimentocnh = fordata.parse((String) rs.getString("VENCIMENTO_CNH"));
                        SimpleDateFormat forma = new SimpleDateFormat("dd/MM/yyyy");
                        String admissaofor = (String) forma.format(admissao);
                        String defensivafor = (String) forma.format(defensiva);
                        String vencimentocnhfor = (String) forma.format(vencimentocnh);

                        this.fTextAdminissao.setValue(admissaofor);
                        this.fTextDataDefensiva.setValue(defensivafor);
                        this.fTextVencimentoCNH.setValue(vencimentocnhfor);

                    } catch (ParseException ex) {
                        Logger.getLogger(CadastroCondutor.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    this.tBoxMatricula.setText(rs.getString("MATRICULA"));
                    this.tBoxNome.setText(rs.getString("NOME"));
                    this.tBoxCentro.setText(rs.getString("CENTRO"));
                    this.tBoxIButton.setText(rs.getString("IBUTTON"));
                    this.cBoxEmpresa.setSelectedItem(rs.getString("EMPRESA"));
                    this.cBoxArea.setSelectedItem(rs.getString("AREA"));
                    this.tBoxCargo.setText(rs.getString("CARGO"));
                    this.cBoxUnidade.setSelectedItem(rs.getString("UNIDADE"));
                    this.lRegiao.setText(rs.getString("REGIONAL"));
                    this.tBoxNCNH.setText(rs.getString("N_CNH"));
                    this.cBoxCategoriaCNH.setSelectedItem(rs.getString("CATEGORIA_CNH"));
                    this.cBoxGestorSubRegional.setSelectedItem(rs.getString("GESTOR_SUB_REGIONAL"));
                    this.cBoxGestorRegional.setSelectedItem(rs.getString("GESTOR_REGIONAL"));
                    this.cBoxGestorDivisional.setSelectedItem(rs.getString("GESTOR_DIVISIONAL"));
                    this.tAreaObservacao.setText(rs.getString("OBSERVACAO"));
                    this.cBoxAtivo.setSelectedItem(rs.getString("ATIVO"));

                    if (rs.getBoolean("POLL") == false) {
                        this.checkBoxPoll.setSelected(false);
                    } else {
                        this.checkBoxPoll.setSelected(true);
                    }
                    if (rs.getBoolean("TRAB") == false) {
                        this.checkBoxTrab.setSelected(false);
                    } else {
                        this.checkBoxTrab.setSelected(true);
                    }
                    if (rs.getBoolean("DESIG") == false) {
                        this.checkBoxDesig.setSelected(false);
                    } else {
                        this.checkBoxDesig.setSelected(true);
                    }
                    if (rs.getBoolean("FORM_31") == false) {
                        this.checkBoxForm31.setSelected(false);
                    } else {
                        this.checkBoxForm31.setSelected(true);
                    }
                    if (rs.getBoolean("FORM_32") == false) {
                        this.checkBoxForm32.setSelected(false);
                    } else {
                        this.checkBoxForm32.setSelected(true);
                    }
                    if (rs.getBoolean("APROVADA") == false) {
                        this.checkBoxAprovado.setSelected(false);
                    } else {
                        this.checkBoxAprovado.setSelected(true);
                    }

                }
                ConexaoMySQL.FecharConexao();
            } catch (SQLException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
                ConexaoMySQL.FecharConexao();
            }
        }
    }//GEN-LAST:event_tabelaCondutoresMouseClicked

    private void bFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltrarActionPerformed
        filtrar();
    }//GEN-LAST:event_bFiltrarActionPerformed

    private void bAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtualizarActionPerformed

        Condutor condut = new Condutor();
        CondutorAtualizar condatu = new CondutorAtualizar();

        SimpleDateFormat fordata = new SimpleDateFormat("dd/MM/yyyy");
        try {
            Date admissao = fordata.parse((String) this.fTextAdminissao.getText());
            Date defensiva = fordata.parse((String) this.fTextDataDefensiva.getText());
            Date vencimentocnh = fordata.parse((String) this.fTextVencimentoCNH.getText());
            SimpleDateFormat forma = new SimpleDateFormat("yyyy-MM-dd");
            String admissaofor = (String) forma.format(admissao);
            String defensivafor = (String) forma.format(defensiva);
            String vencimentocnhfor = (String) forma.format(vencimentocnh);
            condut.setDataadminissao(admissaofor);
            condut.setDatadefensiva(defensivafor);
            condut.setVencimentocnh(vencimentocnhfor);

        } catch (ParseException ex) {
            Logger.getLogger(CadastroCondutor.class.getName()).log(Level.SEVERE, null, ex);
        }

        condut.setId(Integer.parseInt(lID.getText()));
        condut.setMatricula(tBoxMatricula.getText());
        condut.setNome(tBoxNome.getText());
        condut.setCentro(tBoxCentro.getText());
        condut.setIbutton(tBoxIButton.getText());
        condut.setEmpresa((String) cBoxEmpresa.getSelectedItem());
        condut.setArea((String) cBoxArea.getSelectedItem());
        condut.setCargo(tBoxCargo.getText());
        condut.setUnidade((String) cBoxUnidade.getSelectedItem());
        condut.setRegional(lRegiao.getText());
        condut.setNcnh(tBoxNCNH.getText());
        condut.setGestorsubregional((String) cBoxGestorSubRegional.getSelectedItem());
        condut.setGestorregional((String) cBoxGestorRegional.getSelectedItem());
        condut.setGestordivisional((String) cBoxGestorDivisional.getSelectedItem());
        condut.setObservacao(tAreaObservacao.getText());
        condut.setAtivo((String) cBoxAtivo.getSelectedItem());

        if (this.checkBoxPoll.isSelected()) {
            condut.setPoll(true);
        } else {
            condut.setPoll(false);
        }
        if (this.checkBoxTrab.isSelected()) {
            condut.setTrab(true);
        } else {
            condut.setTrab(false);
        }
        if (this.checkBoxDesig.isSelected()) {
            condut.setDesig(true);
        } else {
            condut.setDesig(false);
        }
        if (this.checkBoxForm31.isSelected()) {
            condut.setForm31(true);
        } else {
            condut.setForm31(false);
        }
        if (this.checkBoxForm32.isSelected()) {
            condut.setForm32(true);
        } else {
            condut.setForm32(false);
        }
        if (this.checkBoxAprovado.isSelected()) {
            condut.setAprovado(true);
        } else {
            condut.setAprovado(false);
        }

        condatu.CondutorAtualizar(condut);
        limpar();
        filtrar();
        JOptionPane.showMessageDialog(this, "Condutor atualizado com sucesso");
    }//GEN-LAST:event_bAtualizarActionPerformed

    private void bSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarActionPerformed
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT MATRICULA FROM `condutor` WHERE `MATRICULA` LIKE '" + this.tBoxMatricula.getText() + "'");
            ResultSet rs = st.getResultSet();
            if (rs.first()) {
                JOptionPane.showMessageDialog(this, "Matrícula já cadastrada");
                return;
            }
            Condutor condut = new Condutor();
            CondutorSalvar csalv = new CondutorSalvar();

            SimpleDateFormat fordata = new SimpleDateFormat("dd/MM/yyyy");
            try {
                Date admissao = fordata.parse((String) this.fTextAdminissao.getText());
                Date defensiva = fordata.parse((String) this.fTextDataDefensiva.getText());
                Date vencimentocnh = fordata.parse((String) this.fTextVencimentoCNH.getText());
                SimpleDateFormat forma = new SimpleDateFormat("yyyy-MM-dd");
                String admissaofor = (String) forma.format(admissao);
                String defensivafor = (String) forma.format(defensiva);
                String vencimentocnhfor = (String) forma.format(vencimentocnh);
                condut.setDataadminissao(admissaofor);
                condut.setDatadefensiva(defensivafor);
                condut.setVencimentocnh(vencimentocnhfor);

            } catch (ParseException ex) {
                Logger.getLogger(CadastroCondutor.class.getName()).log(Level.SEVERE, null, ex);
            }

            condut.setMatricula(tBoxMatricula.getText());
            condut.setNome(tBoxNome.getText());
            condut.setCentro(tBoxCentro.getText());
            condut.setIbutton(tBoxIButton.getText());
            condut.setEmpresa((String) cBoxEmpresa.getSelectedItem());
            condut.setArea((String) cBoxArea.getSelectedItem());
            condut.setCargo(tBoxCargo.getText());
            condut.setUnidade((String) cBoxUnidade.getSelectedItem());
            condut.setRegional(lRegiao.getText());
            condut.setNcnh(tBoxNCNH.getText());
            condut.setGestorsubregional((String) cBoxGestorSubRegional.getSelectedItem());
            condut.setGestorregional((String) cBoxGestorRegional.getSelectedItem());
            condut.setGestordivisional((String) cBoxGestorDivisional.getSelectedItem());
            condut.setObservacao(tAreaObservacao.getText());
            condut.setAtivo((String) cBoxAtivo.getSelectedItem());

            if (this.checkBoxPoll.isSelected()) {
                condut.setPoll(true);
            } else {
                condut.setPoll(false);
            }
            if (this.checkBoxTrab.isSelected()) {
                condut.setTrab(true);
            } else {
                condut.setTrab(false);
            }
            if (this.checkBoxDesig.isSelected()) {
                condut.setDesig(true);
            } else {
                condut.setDesig(false);
            }
            if (this.checkBoxForm31.isSelected()) {
                condut.setForm31(true);
            } else {
                condut.setForm31(false);
            }
            if (this.checkBoxForm32.isSelected()) {
                condut.setForm32(true);
            } else {
                condut.setForm32(false);
            }
            if (this.checkBoxAprovado.isSelected()) {
                condut.setAprovado(true);
            } else {
                condut.setAprovado(false);
            }

            csalv.CondutorSalvar(condut);
            limpar();
            filtrar();
            JOptionPane.showMessageDialog(this, "Condutor cadastrado com sucesso");
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }//GEN-LAST:event_bSalvarActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        if (lID.getText() == "") {
            JOptionPane.showMessageDialog(this, "Selecione um condutor clicando na tabela");
            return;
        }
        Condutor condut = new Condutor();
        CondutorExcluir cexc = new CondutorExcluir();

        condut.setId(Integer.parseInt(lID.getText()));

        cexc.CondutorExcluir(condut);
        limpar();
        filtrar();
        JOptionPane.showMessageDialog(this, "Condutor excluído com sucesso");
    }//GEN-LAST:event_bExcluirActionPerformed

    private void bLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimparActionPerformed
        limpar();
        filtrar();
    }//GEN-LAST:event_bLimparActionPerformed

    private void fTextAdminissaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTextAdminissaoFocusGained
        this.fTextAdminissao.setText("");
    }//GEN-LAST:event_fTextAdminissaoFocusGained

    private void fTextDataDefensivaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTextDataDefensivaFocusGained
        this.fTextDataDefensiva.setText("");
    }//GEN-LAST:event_fTextDataDefensivaFocusGained

    private void fTextVencimentoCNHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fTextVencimentoCNHFocusGained
        this.fTextVencimentoCNH.setText("");
    }//GEN-LAST:event_fTextVencimentoCNHFocusGained

    private void cBoxUnidadePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxUnidadePopupMenuWillBecomeVisible
        carregarUnidade();
    }//GEN-LAST:event_cBoxUnidadePopupMenuWillBecomeVisible

    private void cBoxGestorSubRegionalPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxGestorSubRegionalPopupMenuWillBecomeVisible
        carregarGestorSubRegional();
    }//GEN-LAST:event_cBoxGestorSubRegionalPopupMenuWillBecomeVisible

    private void cBoxGestorRegionalPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxGestorRegionalPopupMenuWillBecomeVisible
        carregarGestorRegional();
    }//GEN-LAST:event_cBoxGestorRegionalPopupMenuWillBecomeVisible

    private void cBoxGestorDivisionalPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cBoxGestorDivisionalPopupMenuWillBecomeVisible
        carregarGestorDivisional();
    }//GEN-LAST:event_cBoxGestorDivisionalPopupMenuWillBecomeVisible

    /**
     * @param args the command line arguments
     */
    public void filtrar() {
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tabelaCondutores.getModel();
        tabelaCondutores.setRowSorter(new TableRowSorter(modelo));
        modelo.setNumRows(0);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT * FROM `condutor` WHERE `MATRICULA` LIKE '%"
                    + this.tBoxMatricula.getText() + "%' AND `NOME` LIKE '%"
                    + this.tBoxNome.getText() + "%' AND `CENTRO` LIKE '%"
                    + this.tBoxCentro.getText() + "%' AND `IBUTTON` LIKE '%"
                    + this.tBoxIButton.getText() + "%' AND `EMPRESA` LIKE '%"
                    + this.cBoxEmpresa.getSelectedItem() + "%' AND `AREA` LIKE '%"
                    + this.cBoxArea.getSelectedItem() + "%' AND `CARGO` LIKE '%"
                    + this.tBoxCargo.getText() + "%' AND `UNIDADE` LIKE '%"
                    + this.cBoxUnidade.getSelectedItem() + "%' AND `ATIVO` LIKE '%"
                    + this.cBoxAtivo.getSelectedItem() + "%' ORDER BY `NOME`");
            ResultSet rs = st.getResultSet();

            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getInt("ID"),
                    rs.getString("MATRICULA"),
                    rs.getString("NOME"),
                    rs.getString("CENTRO"),
                    rs.getString("UNIDADE"),
                    rs.getString("ATIVO"),});
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void carregarUnidade() {
        this.cBoxUnidade.removeAllItems();
        this.cBoxUnidade.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT FILIAL FROM `filial` ORDER BY FILIAL");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxUnidade.addItem(rs.getString("FILIAL"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void carregarGestorSubRegional() {
        this.cBoxGestorSubRegional.removeAllItems();
        this.cBoxGestorSubRegional.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT GESTOR_SUB FROM `filial` WHERE FILIAL LIKE '%"
                    + this.cBoxUnidade.getSelectedItem() + "%' ORDER BY GESTOR_SUB");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxGestorSubRegional.addItem(rs.getString("GESTOR_SUB"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }
    
    public void carregarGestorRegional() {
        this.cBoxGestorRegional.removeAllItems();
        this.cBoxGestorRegional.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT GESTOR_RG FROM `filial` WHERE FILIAL LIKE '%"
                    + this.cBoxUnidade.getSelectedItem() + "%' ORDER BY GESTOR_RG");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxGestorRegional.addItem(rs.getString("GESTOR_RG"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }
    
    public void carregarGestorDivisional() {
        this.cBoxGestorDivisional.removeAllItems();
        this.cBoxGestorDivisional.addItem("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = ConexaoMySQL.getConexaoMySQL();
            java.sql.Statement st = conn.createStatement();
            st.executeQuery("SELECT DISTINCT GESTOR_DIV FROM `filial` WHERE FILIAL LIKE '%"
                    + this.cBoxUnidade.getSelectedItem() + "%' ORDER BY GESTOR_DIV");
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                cBoxGestorDivisional.addItem(rs.getString("GESTOR_DIV"));
            }
            ConexaoMySQL.FecharConexao();
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, e);
            ConexaoMySQL.FecharConexao();
        }
    }

    public void limpar() {
        this.tBoxMatricula.setText("");
        this.tBoxNome.setText("");
        this.tBoxCentro.setText("");
        this.tBoxIButton.setText("");
        this.checkBoxPoll.setSelected(false);
        this.checkBoxDesig.setSelected(false);
        this.checkBoxTrab.setSelected(false);
        this.cBoxEmpresa.setSelectedItem("");
        this.cBoxArea.setSelectedItem("");
        this.tBoxCargo.setText("");
        this.cBoxUnidade.setSelectedItem("");
        this.lRegiao.setText("");
        this.fTextAdminissao.setText("01/01/2017");
        this.fTextDataDefensiva.setText("01/01/2017");
        this.fTextVencimentoCNH.setText("01/01/2017");
        this.tBoxNCNH.setText("");
        this.checkBoxForm31.setSelected(false);
        this.checkBoxForm32.setSelected(false);
        this.cBoxGestorSubRegional.setSelectedItem("");
        this.cBoxGestorRegional.setSelectedItem("");
        this.cBoxGestorDivisional.setSelectedItem("");
        this.checkBoxAprovado.setSelected(false);
        this.tAreaObservacao.setText("");
        this.cBoxAtivo.setSelectedItem("");
    }

    public void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/br/com/controleorcamento/imagens/LDC_logo.png")));
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCondutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCondutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCondutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCondutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCondutor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtualizar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JButton bFiltrar;
    private javax.swing.JButton bLimpar;
    private javax.swing.JButton bSalvar;
    private javax.swing.JComboBox<String> cBoxArea;
    private javax.swing.JComboBox<String> cBoxAtivo;
    private javax.swing.JComboBox<String> cBoxCategoriaCNH;
    private javax.swing.JComboBox<String> cBoxEmpresa;
    private javax.swing.JComboBox<Object> cBoxGestorDivisional;
    private javax.swing.JComboBox<Object> cBoxGestorRegional;
    private javax.swing.JComboBox<Object> cBoxGestorSubRegional;
    private javax.swing.JComboBox<Object> cBoxUnidade;
    private javax.swing.JCheckBox checkBoxAprovado;
    private javax.swing.JCheckBox checkBoxDesig;
    private javax.swing.JCheckBox checkBoxForm31;
    private javax.swing.JCheckBox checkBoxForm32;
    private javax.swing.JCheckBox checkBoxPoll;
    private javax.swing.JCheckBox checkBoxTrab;
    private javax.swing.JFormattedTextField fTextAdminissao;
    private javax.swing.JFormattedTextField fTextDataDefensiva;
    private javax.swing.JFormattedTextField fTextVencimentoCNH;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lID;
    private javax.swing.JLabel lRegiao;
    private javax.swing.JTextArea tAreaObservacao;
    private javax.swing.JTextField tBoxCargo;
    private javax.swing.JTextField tBoxCentro;
    private javax.swing.JTextField tBoxIButton;
    private javax.swing.JTextField tBoxMatricula;
    private javax.swing.JTextField tBoxNCNH;
    private javax.swing.JTextField tBoxNome;
    private javax.swing.JTable tabelaCondutores;
    // End of variables declaration//GEN-END:variables
}
